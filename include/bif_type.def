// DEFINE_BIF_TYPE(id, bif_type, bro_type, c_type, accessor, constructor)

DEFINE_BIF_TYPE(TYPE_ADDR, 	"addr", "addr", "AddrVal*", 		"%s->AsAddrVal()", 	"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_ANY, 	"any", "any", "Val*", 			"%s", 			"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_BOOL, 	"bool", "bool", "int", 			"%s->AsBool()", 	"val_mgr->Bool(%s)")
DEFINE_BIF_TYPE(TYPE_CONN_ID, 	"conn_id", "conn_id", "Val*", 		"%s", 			"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_CONNECTION, "connection", "connection", "Connection*", "%s->AsRecordVal()->GetOrigin()", "%s->ConnVal()")
DEFINE_BIF_TYPE(TYPE_COUNT, 	"count", "count", "bro_uint_t", 	"%s->AsCount()", 	"val_mgr->Count(%s)")
DEFINE_BIF_TYPE(TYPE_DOUBLE, 	"double", "double", "double", 		"%s->AsDouble()", 	"make_intrusive<Val>(%s, TYPE_DOUBLE)")
DEFINE_BIF_TYPE(TYPE_FILE, 	"file", "file", "BroFile*", 		"%s->AsFile()", 	"make_intrusive<Val>(%s)")
DEFINE_BIF_TYPE(TYPE_INT, 	"int", "int", "bro_int_t", 		"%s->AsInt()", 		"val_mgr->Int(%s)")
DEFINE_BIF_TYPE(TYPE_INTERVAL, 	"interval", "interval", "double", 	"%s->AsInterval()", 	"make_intrusive<IntervalVal>(%s, Seconds)")
DEFINE_BIF_TYPE(TYPE_PACKET, 	"packet", "packet", "TCP_TracePacket*", "%s->AsRecordVal()->GetOrigin()", "IntrusivePtr{AdoptRef{}, %s->PacketVal()}")
DEFINE_BIF_TYPE(TYPE_PATTERN, 	"pattern", "pattern", "RE_Matcher*", 	"%s->AsPattern()",	"make_intrusive<PatternVal>(%s)")
// DEFINE_BIF_TYPE(TYPE_PORT, 	"port", "port", "uint32", 		"%s->AsPortVal()->Port()", "incomplete data")
DEFINE_BIF_TYPE(TYPE_PORT, 	"port", "port", "PortVal*", 		"%s->AsPortVal()",	"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_PORTVAL, 	"portval", "port", "PortVal*", 		"%s->AsPortVal()",	"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_STRING, 	"string", "string", "StringVal*", 	"%s->AsStringVal()",	"IntrusivePtr{AdoptRef{}, %s}")
// DEFINE_BIF_TYPE(TYPE_STRING, 	"string", "string", "BroString*", 	"%s->AsString()",	"make_intrusive<StringVal>(%s)")
DEFINE_BIF_TYPE(TYPE_SUBNET, 	"subnet", "subnet", "SubNetVal*", 	"%s->AsSubNetVal()",	"IntrusivePtr{AdoptRef{}, %s}")
DEFINE_BIF_TYPE(TYPE_TIME, 	"time", "time", "double", 		"%s->AsTime()", 	"make_intrusive<Val>(%s, TYPE_TIME)")
DEFINE_BIF_TYPE(TYPE_OTHER, 	"", "", "Val*", 			"%s", 			"IntrusivePtr{AdoptRef{}, %s}")
